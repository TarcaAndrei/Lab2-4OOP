        -:    0:Source:C:/Users/Andrei/Documents/Facultate/Semestrul_II/Programare orientata obiect/Laboratoare/Lab2-4/utilities/filtrari.c
        -:    0:Graph:C:\Users\Andrei\Documents\Facultate\Semestrul_II\Programare orientata obiect\Laboratoare\Lab2-4\cmake-build-debug-coverage\CMakeFiles\Lab2_4.dir\utilities\filtrari.c.gcno
        -:    0:Data:C:\Users\Andrei\Documents\Facultate\Semestrul_II\Programare orientata obiect\Laboratoare\Lab2-4\cmake-build-debug-coverage\CMakeFiles\Lab2_4.dir\utilities\filtrari.c.gcda
        -:    0:Runs:1
        -:    1://
        -:    2:// Created by Andrei on 12.03.2023.
        -:    3://
        -:    4:
        -:    5:#include <string.h>
        -:    6:#include "filtrari.h"
        -:    7:
function filtrare_destinatie called 1 returned 100% blocks executed 100%
        1:    8:int filtrare_destinatie(PtrOferta *array, PtrOferta *arr_final, int lungime, char *destinatie)
        -:    9:{
        -:   10:    int j;
        1:   11:    j = 0;
        8:   12:    for(int i=0; i<lungime; i++)
        1:   12-block  0
        7:   12-block  1
        8:   12-block  2
branch  0 taken 7
branch  1 taken 1 (fallthrough)
        -:   13:    {
        7:   14:        if(strcmp(get_destinatie(array[i]), destinatie) == 0){
        7:   14-block  0
call    0 returned 7
branch  1 taken 1 (fallthrough)
branch  2 taken 6
        1:   15:            arr_final[j] = array[i];
        1:   16:            j++;
        1:   16-block  0
        -:   17:        }
        -:   18:    }
        1:   19:    return j;
        1:   19-block  0
        -:   20:}
        -:   21:
function filtrare_tip called 1 returned 100% blocks executed 100%
        1:   22:int filtrare_tip(PtrOferta *array, PtrOferta *arr_final, int lungime, char *tip) {
        -:   23:    int j;
        1:   24:    j = 0;
        8:   25:    for(int i=0; i<lungime; i++){
        1:   25-block  0
        7:   25-block  1
        8:   25-block  2
branch  0 taken 7
branch  1 taken 1 (fallthrough)
        7:   26:        if(strcmp(get_tip(array[i]), tip) == 0){
        7:   26-block  0
call    0 returned 7
branch  1 taken 2 (fallthrough)
branch  2 taken 5
        2:   27:            arr_final[j] = array[i];
        2:   28:            j++;
        2:   28-block  0
        -:   29:        }
        -:   30:    }
        1:   31:    return j;
        1:   31-block  0
        -:   32:}
        -:   33:
function filtrare_pret called 2 returned 100% blocks executed 100%
        2:   34:int filtrare_pret(PtrOferta *array, PtrOferta *arr_final, int lungime, double pret, int mod) {
        -:   35:    int j;
        2:   36:    j = 0;
        2:   37:    if(mod == 1){
        2:   37-block  0
branch  0 taken 1 (fallthrough)
branch  1 taken 1
        8:   38:        for(int i = 0; i<lungime; i++){
        1:   38-block  0
        7:   38-block  1
        8:   38-block  2
branch  0 taken 7
branch  1 taken 1
        7:   39:            if(get_pret(array[i]) >= pret){
        7:   39-block  0
call    0 returned 7
branch  1 taken 6 (fallthrough)
branch  2 taken 1
        6:   40:                arr_final[j] = array[i];
        6:   41:                j++;
        6:   41-block  0
        -:   42:            }
        -:   43:        }
        -:   44:    } else{
        8:   45:        for(int i = 0; i<lungime; i++){
        1:   45-block  0
        7:   45-block  1
        8:   45-block  2
branch  0 taken 7
branch  1 taken 1 (fallthrough)
        7:   46:            if(get_pret(array[i]) <= pret){
        7:   46-block  0
call    0 returned 7
branch  1 taken 1 (fallthrough)
branch  2 taken 6
        1:   47:                arr_final[j] = array[i];
        1:   48:                j++;
        1:   48-block  0
        -:   49:            }
        -:   50:        }
        -:   51:    }
        2:   52:    return j;
        2:   52-block  0
        -:   53:}
