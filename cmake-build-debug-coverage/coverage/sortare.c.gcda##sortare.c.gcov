        -:    0:Source:C:/Users/Andrei/Documents/Facultate/Semestrul_II/Programare orientata obiect/Laboratoare/Lab2-4/utilities/sortare.c
        -:    0:Graph:C:\Users\Andrei\Documents\Facultate\Semestrul_II\Programare orientata obiect\Laboratoare\Lab2-4\cmake-build-debug-coverage\CMakeFiles\Lab2_4.dir\utilities\sortare.c.gcno
        -:    0:Data:C:\Users\Andrei\Documents\Facultate\Semestrul_II\Programare orientata obiect\Laboratoare\Lab2-4\cmake-build-debug-coverage\CMakeFiles\Lab2_4.dir\utilities\sortare.c.gcda
        -:    0:Runs:1
        -:    1://
        -:    2:// Created by Andrei on 12.03.2023.
        -:    3://
        -:    4:
        -:    5:#include <string.h>
        -:    6:#include "sortare.h"
        -:    7:
function sortare_pret called 2 returned 100% blocks executed 100%
        2:    8:void sortare_pret(PtrOferta *array, int lungime, int optiune) {
        2:    9:    if(optiune == 1){
        2:    9-block  0
branch  0 taken 1 (fallthrough)
branch  1 taken 1
        -:   10:        int i, j;
        -:   11:        PtrOferta aux;
        7:   12:        for(i=0; i<lungime-1; i++){
        1:   12-block  0
        6:   12-block  1
        7:   12-block  2
branch  0 taken 6
branch  1 taken 1
       27:   13:            for(j=i+1; j<lungime; j++){
        6:   13-block  0
       21:   13-block  1
       27:   13-block  2
branch  0 taken 21
branch  1 taken 6 (fallthrough)
       21:   14:                if(get_pret(array[i]) > get_pret(array[j])){
       21:   14-block  0
call    0 returned 21
call    1 returned 21
branch  2 taken 11 (fallthrough)
branch  3 taken 10
       11:   15:                    aux = array[i];
       11:   16:                    array[i] = array[j];
       11:   17:                    array[j] = aux;
       11:   17-block  0
        -:   18:                }
        -:   19:            }
        -:   20:        }
        -:   21:    }
        -:   22:    else{
        -:   23:        int i, j;
        -:   24:        PtrOferta aux;
        7:   25:        for(i=0; i<lungime-1; i++){
        1:   25-block  0
        6:   25-block  1
        7:   25-block  2
branch  0 taken 6
branch  1 taken 1 (fallthrough)
       27:   26:            for(j=i+1; j<lungime; j++){
        6:   26-block  0
       21:   26-block  1
       27:   26-block  2
branch  0 taken 21
branch  1 taken 6 (fallthrough)
       21:   27:                if(get_pret(array[i]) < get_pret(array[j])){
       21:   27-block  0
call    0 returned 21
call    1 returned 21
branch  2 taken 21 (fallthrough)
branch  3 taken 0
       21:   28:                    aux = array[i];
       21:   29:                    array[i] = array[j];
       21:   30:                    array[j] = aux;
       21:   30-block  0
        -:   31:                }
        -:   32:            }
        -:   33:        }
        -:   34:    }
        2:   35:}
        -:   36:
function sortare_destinatie called 2 returned 100% blocks executed 100%
        2:   37:void sortare_destinatie(PtrOferta *array, int lungime, int optiune) {
        2:   38:    if(optiune == 1){
        2:   38-block  0
branch  0 taken 1 (fallthrough)
branch  1 taken 1
        -:   39:        int i, j;
        -:   40:        PtrOferta aux;
        7:   41:        for(i=0; i<lungime-1; i++){
        1:   41-block  0
        6:   41-block  1
        7:   41-block  2
branch  0 taken 6
branch  1 taken 1
       27:   42:            for(j=i+1; j<lungime; j++){
        6:   42-block  0
       21:   42-block  1
       27:   42-block  2
branch  0 taken 21
branch  1 taken 6 (fallthrough)
       21:   43:                if(strcmp(get_destinatie(array[i]), get_destinatie(array[j])) > 0){
       21:   43-block  0
call    0 returned 21
call    1 returned 21
branch  2 taken 13 (fallthrough)
branch  3 taken 8
       13:   44:                    aux = array[i];
       13:   45:                    array[i] = array[j];
       13:   46:                    array[j] = aux;
       13:   46-block  0
        -:   47:                }
        -:   48:            }
        -:   49:        }
        -:   50:    }
        -:   51:    else{
        -:   52:        int i, j;
        -:   53:        PtrOferta aux;
        7:   54:        for(i=0; i<lungime-1; i++){
        1:   54-block  0
        6:   54-block  1
        7:   54-block  2
branch  0 taken 6
branch  1 taken 1 (fallthrough)
       27:   55:            for(j=i+1; j<lungime; j++){
        6:   55-block  0
       21:   55-block  1
       27:   55-block  2
branch  0 taken 21
branch  1 taken 6 (fallthrough)
       21:   56:                if(strcmp(get_destinatie(array[i]), get_destinatie(array[j])) < 0){
       21:   56-block  0
call    0 returned 21
call    1 returned 21
branch  2 taken 21 (fallthrough)
branch  3 taken 0
       21:   57:                    aux = array[i];
       21:   58:                    array[i] = array[j];
       21:   59:                    array[j] = aux;
       21:   59-block  0
        -:   60:                }
        -:   61:            }
        -:   62:        }
        -:   63:    }
        2:   64:}
        -:   65:
